{"ast":null,"code":"var _jsxFileName = \"/Users/ericzhu/my-react-bootstrap-app/src/GoogleMapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, DirectionsRenderer, StandaloneSearchBox } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 37.7749,\n  // Example coordinates (San Francisco)\n  lng: -122.4194\n};\nconst GoogleMapComponent = ({\n  children\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const searchBox = useRef(null);\n  const onLoad = ref => {\n    searchBox.current = ref;\n  };\n  const onPlacesChanged = () => {\n    const places = searchBox.current.getPlaces();\n    if (places.length) {\n      const origin = center;\n      const destination = places[0].geometry.location;\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDuBX2b6y-SpGeuj7KFSgBTrxBoJpV3VQA\" // Replace with your actual API key\n    ,\n    libraries: [\"places\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-search-box\",\n      children: [children, \"  // Here the search box will be injected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: map => setMap(map),\n      children: directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"pIfSidBmYgcUuc9NLcHrS++F37s=\");\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LoadScript","Marker","DirectionsRenderer","StandaloneSearchBox","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","GoogleMapComponent","children","_s","map","setMap","directions","setDirections","searchBox","onLoad","ref","current","onPlacesChanged","places","getPlaces","length","origin","destination","geometry","location","directionsService","window","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","console","error","googleMapsApiKey","libraries","className","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","_c","$RefreshReg$"],"sources":["/Users/ericzhu/my-react-bootstrap-app/src/GoogleMapComponent.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, DirectionsRenderer, StandaloneSearchBox } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst center = {\n  lat: 37.7749,  // Example coordinates (San Francisco)\n  lng: -122.4194\n};\n\nconst GoogleMapComponent = ({ children }) => {\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const searchBox = useRef(null);\n\n  const onLoad = (ref) => {\n    searchBox.current = ref;\n  };\n\n  const onPlacesChanged = () => {\n    const places = searchBox.current.getPlaces();\n    if (places.length) {\n      const origin = center;\n      const destination = places[0].geometry.location;\n\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route({\n          origin: origin,\n          destination: destination,\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            setDirections(result);\n          } else {\n            console.error(`error fetching directions ${result}`);\n          }\n        }\n      );\n    }\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyDuBX2b6y-SpGeuj7KFSgBTrxBoJpV3VQA\" // Replace with your actual API key\n      libraries={[\"places\"]}\n    >\n      <div className=\"map-search-box\">\n        {children}  // Here the search box will be injected\n      </div>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={map => setMap(map)}\n      >\n        {directions && <DirectionsRenderer directions={directions} />}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default GoogleMapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}