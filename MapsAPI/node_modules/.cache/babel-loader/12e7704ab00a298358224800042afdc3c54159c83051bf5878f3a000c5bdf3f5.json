{"ast":null,"code":"var _jsxFileName = \"/Users/ericzhu/my-react-bootstrap-app/src/GoogleMapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst GoogleMapComponent = ({\n  origin,\n  destination,\n  setDestination\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n  useEffect(() => {\n    if (origin && destination) {\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n          onDirectionsChanged(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    }\n  }, [origin, destination, onDirectionsChanged]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDuBX2b6y-SpGeuj7KFSgBTrxBoJpV3VQA\",\n    libraries: [\"places\"],\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: origin,\n      zoom: 10,\n      onLoad: map => setMap(map),\n      children: directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"WVzHPeRr8fb2oxd/9JeG28oDEAg=\");\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","DirectionsRenderer","jsxDEV","_jsxDEV","containerStyle","width","height","GoogleMapComponent","origin","destination","setDestination","_s","map","setMap","directions","setDirections","directionsService","window","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","onDirectionsChanged","console","error","googleMapsApiKey","libraries","children","mapContainerStyle","center","zoom","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericzhu/my-react-bootstrap-app/src/GoogleMapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst GoogleMapComponent = ({ origin, destination, setDestination }) => {\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n\n  useEffect(() => {\n    if (origin && destination) {\n      const directionsService = new window.google.maps.DirectionsService();\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n          onDirectionsChanged(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    }\n  }, [origin, destination, onDirectionsChanged]);\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyDuBX2b6y-SpGeuj7KFSgBTrxBoJpV3VQA\" \n      libraries={[\"places\"]}\n    >\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={origin}\n        zoom={10}\n        onLoad={map => setMap(map)}\n      >\n        {directions && <DirectionsRenderer directions={directions} />}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default GoogleMapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,IAAIC,WAAW,EAAE;MACzB,MAAMO,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACpEJ,iBAAiB,CAACK,KAAK,CAAC;QACtBb,MAAM,EAAEA,MAAM;QACdC,WAAW,EAAEA,WAAW;QACxBa,UAAU,EAAEL,MAAM,CAACC,MAAM,CAACC,IAAI,CAACI,UAAU,CAACC;MAC5C,CAAC,EAAE,CAACC,MAAM,EAAEC,MAAM,KAAK;QACrB,IAAIA,MAAM,KAAKT,MAAM,CAACC,MAAM,CAACC,IAAI,CAACQ,gBAAgB,CAACC,EAAE,EAAE;UACrDb,aAAa,CAACU,MAAM,CAAC;UACrBI,mBAAmB,CAACJ,MAAM,CAAC;QAC7B,CAAC,MAAM;UACLK,OAAO,CAACC,KAAK,CAAE,6BAA4BN,MAAO,EAAC,CAAC;QACtD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACjB,MAAM,EAAEC,WAAW,EAAEoB,mBAAmB,CAAC,CAAC;EAE9C,oBACE1B,OAAA,CAACH,UAAU;IACTgC,gBAAgB,EAAC,yCAAyC;IAC1DC,SAAS,EAAE,CAAC,QAAQ,CAAE;IAAAC,QAAA,eAEtB/B,OAAA,CAACJ,SAAS;MACRoC,iBAAiB,EAAE/B,cAAe;MAClCgC,MAAM,EAAE5B,MAAO;MACf6B,IAAI,EAAE,EAAG;MACTC,MAAM,EAAE1B,GAAG,IAAIC,MAAM,CAACD,GAAG,CAAE;MAAAsB,QAAA,EAE1BpB,UAAU,iBAAIX,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEA;MAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAAA/B,EAAA,CArCKJ,kBAAkB;AAAAoC,EAAA,GAAlBpC,kBAAkB;AAuCxB,eAAeA,kBAAkB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}